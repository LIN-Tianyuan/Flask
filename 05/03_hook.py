from flask import Flask

app = Flask(__name__)


# Called before the first request, you can do some initialization inside this method
@app.before_first_request
def before_first_request():
    print("before_first_request")


# Called before each request, when a request has already been made, it may be possible to do the request validation inside this method
# If the verification of the request is unsuccessful, you can respond directly in this method, directly after the return then the view function will not be executed
@app.before_request
def before_request():
    print("before_request")
    # if Requests ineligible:
    #     return "Ineligible"


# Will be called after the execution of the view function, and the response generated by the view function will be passed in, you can do the last step of unified processing of the response in this method
@app.after_request
def after_request(response):
    print("after_request")
    response.headers["Content-Type"] = "application/json"
    return response


# Please call it after every request, it will accept a parameter which is an error message from the server
@app.teardown_request
def teardown_request(response):
    print("teardown_request")


@app.route('/')
def index():
    return 'index'


if __name__ == '__main__':
    app.run(debug=True)